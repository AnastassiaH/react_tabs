{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","id","href","onClick","e","currentTarget","target","currTabId","getAttribute","slice","find","el","handleClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMASaA,EAAuB,SAAC,GAI9B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAUA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWE,EAAIC,KAAOL,EAAgB,YAAc,GACpD,UAAQ,MAFV,SAIE,mBACEM,KAAI,WAAMF,EAAIC,IACd,UAAQ,UACRE,QAAS,SAACC,GACJA,EAAEC,eArBF,SAACC,GAA6C,IAAD,EACzDC,EAAS,UAAGD,EAAOE,aAAa,eAAvB,aAAG,EAA6BC,MAAM,GAEjDF,IAAcX,GAChBC,EAAcF,EAAKe,MAAK,SAAAC,GAAE,OAAIA,EAAGV,KAAOM,MAkB1BK,CAAYR,EAAEC,gBALpB,SASGL,EAAIa,iBAOf,qBAAKf,UAAU,QAAQ,UAAQ,aAA/B,mBACGH,EAAKe,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4CkB,cCzCxCnB,EAAO,CAClB,CAAEM,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,eACxC,CAAEb,GAAI,QAASY,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAS,SAAnD,mBAAOpB,EAAP,KAAsBqB,EAAtB,KAQA,OACE,sBAAKnB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBH,EAAKe,MAAK,SAAAV,GAAG,OAAIA,EAAIC,KAAOL,YADlD,aACsB,EAA4CiB,SAGlE,cAAC,EAAD,CACElB,KAAMA,EACNC,cAAeA,EACfC,cAfgB,SAACG,GACjBA,GACFiB,EAAiBjB,EAAIC,WCf3BiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b1e7ef34.chunk.js","sourcesContent":["import React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab | undefined) => void,\n};\n\nexport const Tabs:React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleClick = (target: EventTarget & HTMLAnchorElement) => {\n    const currTabId = target.getAttribute('href')?.slice(1);\n\n    if (currTabId !== selectedTabId) {\n      onTabSelected(tabs.find(el => el.id === currTabId));\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={tab.id === selectedTabId ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={(e) => {\n                  if (e.currentTarget) {\n                    handleClick(e.currentTarget);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (tab: Tab | undefined) => {\n    if (tab) {\n      setSelectedTabId(tab.id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTabId)?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}